{"name":"pyGameMath","tagline":"Math library for game programming in python.","body":"![ScreenShot](https://raw.github.com/AlexMarinescu/pyGameMath/master/data/pyGameMathLogo.png)\r\n\r\npyGameMath [![Build Status](https://travis-ci.org/AlexMarinescu/pyGameMath.svg?branch=master)](https://travis-ci.org/AlexMarinescu/pyGameMath)\r\n==========\r\nThis is a math library written in python for 2D/3D game development which is also compatible with pypy. I made it while I was learning more about the math used in graphics development and for personal use in OpenGL related projects.\r\nIt's still a work in progress. However, it will be finished soon.\r\n\r\n#####Update 1:#####\r\n* The old version which is fully OOP is inside the folder \"oop math lib\", some bugs are still present.\r\n* The new version has most of the features functional based for performance, it is inside the folder \"src\" and all the bugs from the previous have been nuked.\r\n* There is a new folder called \"experimental\" inside the \"src\" that stores the features that are unfinished.\r\n* Spherical harmonics were moved under \"experimental\".\r\n\r\n#####Update 2:#####\r\n* Updated the matrix and vector, fixed a lot of bugs, still dynamic class that allows Nth dimensions\r\n* A lot of the specific 2D, 3D, 4D functions are outside the dynamic class\r\n* Now it allows in-place transformations\r\n* Some math operations do not support Nth dimensions and will return exceptions\r\n* Removed LU decomposition\r\n* Temporary Removed NxN Matrix Normalization\r\n* Temporary Removed NxN Matrix Determinant\r\n* Temporary Removed NxN Matrix Inverse Calculation\r\n* Quaternion and the rest need to be updated to match the new style.\r\n\r\n###Supported features:###\r\n\r\n#####NxN Matrices:#####\r\n* Transpose\r\n* Scale\r\n* NxN Matrix Multiplication\r\n* NxN Matrix * N Dimensions Vector Multiplication\r\n* 4x4 Perspective Projection Matrix\r\n* lookAt 4x4 Matrix\r\n* Translation (3x3, 4x4)\r\n* Rotation (2x2, 3x3, 4x4)\r\n* Shear (2x2, 3x3, 4x4)\r\n* Project\r\n* Unproject\r\n  \r\n#####N Dimensions Vectors:#####\r\n* Dot Product\r\n* Cross Product (No 7D)\r\n* Refraction\r\n* Reflection\r\n* Invert\r\n* Normalize\r\n  \r\n#####Quaternions:#####\r\n* Normalize\r\n* Dot Product\r\n* Rotation\r\n* Conjugate\r\n* Inverse\r\n* Negate\r\n* Rotate X, Y, Z\r\n* Arbitary Axis Rotation\r\n* To Rotation Matrix (4x4)\r\n* Cross Product\r\n* Vector3D, Scalar Multiplication\r\n* Logarithm\r\n* Exponential\r\n* Power\r\n* Liner Interpolation (LERP)\r\n* Spherical Interpolation (SLERP)\r\n* Quaternion Splines (SQUAD)\r\n* Output\r\n  \r\n#####Plane:#####\r\n* Define using\r\n    * 3 Vectors\r\n    * Point and Normal\r\n    * Manual input\r\n* Dot Product\r\n* Normalize\r\n* Best fit normal and D value\r\n* Distance from plane to a point\r\n* Point location\r\n* Output\r\n  \r\n#####Ray:#####\r\n* Rotate using Matrix\r\n* Rotate using Quaternions\r\n* Translate\r\n* Output\r\n\r\n#####Legendre Polynomial (Experimental):#####\r\n* For spherical harmonics\r\n* (l - m)PML(x) = x(2l - 1)PML-1(x) - (l + m -1)PML-2(x)\r\n* PMM(x) = (-1)^m * (2m - 1)!!(1 - x^2)^m/2\r\n* PMM+1(x) = x(2m + 1)PMM(x)\r\n\r\n#####Spherical Harmonics (Experimental):#####\r\n* Normalization Constant (K)\r\n* Sample a Spherical Harmonic function Y(l, m)\r\n* Sample\r\n* Generate samples\r\n* Coefficients from Irradiance map\r\n  \r\n#####To do:#####\r\n* AABB/Sphere/Cylinder  (Everything is done, just needs to be cleaned up before pushed.)\r\n* GJK (Done, needs to be tested)\r\n* Primitives/Supports for GJK (Basic ones are done, needs to be updated)\r\n* Spherical Harmonics.\r\n* Tutorial on how to use everything.\r\n\r\n#####Note:#####\r\n* Vectors Cross Product is only for 3D and 7D vectors, but currently only the 3D version is implemented.\r\n* While the Vector and Matrix Stacks are not necessary and can be created on the go by anyone, they simplify and organize things a bit better.\r\n* Optimizations are going to be done more indepth once the whole thing is finished and perhaps when I notice that a certain operations/transformation takes too long to execute.\r\n* Also do report any bugs or speed related issues because some functions did not get a chance to be tested.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}